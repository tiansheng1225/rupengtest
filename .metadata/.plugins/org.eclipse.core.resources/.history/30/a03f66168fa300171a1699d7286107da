package com.rupeng.web.controller;

import java.util.List;

import javax.xml.ws.ResponseWrapper;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.rupeng.pojo.Subject;
import com.rupeng.service.SubjectService;
import com.rupeng.util.AjaxResult;
import com.rupeng.util.CommonUtils;

@Controller
@RequestMapping("/card")
public class CardControler {
	@Autowired
	private SubjectService subjectService;
	
	//jsp响应
	@RequestMapping(value="/add.do" ,method=RequestMethod.GET)
	public ModelAndView add(Subject subject) {
		return new ModelAndView("subject/add");
	}
	
	@RequestMapping(value="/add.do" ,method=RequestMethod.POST)
//	public @ResponseBody AjaxResult addSubmit(Subject subject) {客户端提交的数据可以用对象表示
	public @ResponseBody AjaxResult addSubmit(String name) {
		//数据有效性检查
		if (CommonUtils.isEmpty(name)) {
			return new AjaxResult().errorInstance("学科名字不能为空");
		}
		//数据唯一性检查
		Subject subject = new Subject();
		subject.setName(name);
		if (subjectService.isExisted(subject)) {
			return new AjaxResult().errorInstance("学科已存在");
		}
		//执行业务逻辑
		subjectService.insert(subject);
		return new AjaxResult().successInstance("添加成功");
	}
	@RequestMapping("/list.do")
	public ModelAndView list() {
		List<Subject> subjectList = subjectService.selectList();
	    ModelAndView modelAndView = new ModelAndView("subject/list");
	    modelAndView.addObject("subjectList", subjectList);
		return modelAndView;
	}
	@RequestMapping("/update.do")
	public ModelAndView update() {
	    ModelAndView modelAndView = new ModelAndView("subject/update");
		return modelAndView;
	}
	@RequestMapping("/updateSubmit.do")
	public ModelAndView updateSubmit() {
	    ModelAndView modelAndView = new ModelAndView("subject/update");
		return modelAndView;
	}
	//@ResponseBody 将返回值转换为json格式返回给客户端--直接响应
	@RequestMapping("/ajaxList.do")
	public @ResponseBody Object ajaxList() {
		return null;
	}
	@RequestMapping("/del.do")
	public @ResponseBody AjaxResult del(Long id) {
		
		subjectService.delete(id);
		return new AjaxResult().successInstance("删除成功");
	}
}
